C51 COMPILER V7.20   TECLADO                                                               06/18/2006 21:46:56 PAGE 1   


C51 COMPILER V7.20, COMPILATION OF MODULE TECLADO
OBJECT MODULE PLACED IN teclado.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE teclado.c ROM(SMALL) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <REG2051.H>
   2          #define UCHAR unsigned char
   3          #define UINT unsigned int
   4          
   5          #define READF 0x2B
   6          #define READC 0x54
   7          
   8          UCHAR kbHit(void);
   9          void kbInit(void);
  10          UCHAR keyNumber(void);
  11          UCHAR kbRead(void);
  12          void leerclave(UCHAR uc, UCHAR *clv);
  13          
  14          void kbInit(void)
  15             {
  16   1         P1 = READF;      /* Listo para leer filas */
  17   1         }/* FIN DE kbInit */
  18          
  19          
  20          UCHAR kbHit(void)
  21             {
  22   1         return (P1 ^ READF); /* Dará 0 si no hay tecla pulsada */
  23   1         }/* FIN DE kbHit */
  24          
  25          UCHAR keyNumber(void)
  26             {
  27   1         UCHAR fila, col;
  28   1      
  29   1         // Leer e identificar fila
  30   1         fila = P1;
  31   1         switch(fila)
  32   1           {
  33   2           case 0x0b:    fila=0;    break;   /* 00_0.1011 */
  34   2           case 0x2a:    fila=1;    break;   /* 0010.101_ */
  35   2           case 0x29:    fila=2;    break;   /* 0010.10_1 */
  36   2           case 0x23:    fila=3;    break;   /* 0010._011 */
  37   2           default:      fila=0xff; break;
  38   2           }
  39   1      
  40   1         // Leer e identificar columna
  41   1         P1  = READC;  /* Listo para leer columna */
  42   1         col = P1;     /* Leer para determinar la columna */
  43   1         P1  = READF;  /* Listo para leer columna */
  44   1         switch(col)
  45   1            {
  46   2            case 0x44:  col=0;     break;   /* 010_.0100 */
  47   2            case 0x14:  col=1;     break;   /* 0_01.0100 */
  48   2            case 0x50:  col=2;     break;   /* 0101.0_00 */
  49   2            default:    col=0xff;  break;
  50   2            }
  51   1      
  52   1         // Identificar la tecla pulsada
  53   1         if((fila == 0xff)||(col == 0xff))
  54   1            col = 0xff;                       /* Si no hay tecla o hay más de una tecla pulsada */
  55   1         else
C51 COMPILER V7.20   TECLADO                                                               06/18/2006 21:46:56 PAGE 2   

  56   1            col = (col<<2)+fila;    /* Determina el número de la tecla pulsada */
  57   1      
  58   1         return(col);
  59   1         }/* FIN DE keyNumber */
  60          
  61          
  62          UCHAR kbRead(void)
  63             {
  64   1         UCHAR uc;
  65   1      
  66   1         /* La siguiente tabla se usa para hallar el código de cada tecla */
  67   1         /* Tabla de constantes (CODE) */
  68   1         UCHAR code kbTable[16] = { '1', '4', '7', '*',   /* Columna 0 */
  69   1                                    '2', '5', '8', '0',   /* Columna 1 */
  70   1                                    '3', '6', '9', '#'};  /* Columna 2 */
  71   1         int i;
  72   1      
  73   1         if (kbHit() == 0) return 0xff;  // Si noy tecla fuera
  74   1         while(kbHit() != 0)   
  75   1           ;                  /* Esperar a que se suelte la tecla anterior */
  76   1              while(kbHit() == 0)
  77   1           ;                  /* Esperar hasta que se pulse una nueva tecla */
  78   1      
  79   1         for(i=0; i<3600; i++) /* Pausa de 20 ms */
  80   1            ;                  /* para leer después de los rebotes. */
  81   1      
  82   1         uc = keyNumber();     /* Determina el número de tecla pulsada */
  83   1      
  84   1         if( uc != 0xff)       /* Si solo se ha pulsado una tecla, traduce */
  85   1            uc = kbTable[uc];  /* desde kbTable el código asignado a la tecla */
  86   1      
  87   1         return(uc);
  88   1         }/* FIN DE kbRead */
  89          
  90          void leerclave(UCHAR uc, UCHAR *clv)
  91          {
  92   1      
  93   1      UCHAR i=0;
  94   1      
  95   1              for(i=0;i<4;)
  96   1              {
  97   2              
  98   2              uc=kbRead();
  99   2              clv[i]=uc;
 100   2              if(uc=='*')
 101   2               i=0;
 102   2               else i++;
 103   2              
 104   2              }
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
